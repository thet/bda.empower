[buildout]
extends = http://dist.plone.org/release/5.1.4/versions.cfg
show-picked-versions = true
extensions =
    mr.developer

parts =
    instance
    test
    coverage
    test-coverage
    createcoverage
    i18ndude
    omelette
    robot
    plone-helper-scripts
develop = .

sources-dir = ${buildout:directory}/devsrc
always-checkout = force
auto-checkout = bda-empower

[sources]
bda-empower = git git@git.bluedynamics.eu:bda/empowerment-statt-diffamierung/bda-empower.git egg=false

[versions]
plone.restapi = 3.5.0
plone.rest = 1.4.0

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    bda.empower [test, dev]


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'bda.empower', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

